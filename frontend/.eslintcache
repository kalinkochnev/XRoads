[{"/root/XRoads2/XRoads/frontend/src/index.js":"1","/root/XRoads2/XRoads/frontend/src/App.js":"2","/root/XRoads2/XRoads/frontend/src/serviceWorker.js":"3","/root/XRoads2/XRoads/frontend/src/screens/Root.jsx":"4","/root/XRoads2/XRoads/frontend/src/service/State.jsx":"5","/root/XRoads2/XRoads/frontend/src/service/User.jsx":"6","/root/XRoads2/XRoads/frontend/src/screens/Generic/NotFound.jsx":"7","/root/XRoads2/XRoads/frontend/src/screens/Generic/Error.jsx":"8","/root/XRoads2/XRoads/frontend/src/screens/Club/Routes.jsx":"9","/root/XRoads2/XRoads/frontend/src/screens/Generic/HelpRoutes.jsx":"10","/root/XRoads2/XRoads/frontend/src/screens/Club/Page.jsx":"11","/root/XRoads2/XRoads/frontend/src/screens/Club/Browser.jsx":"12","/root/XRoads2/XRoads/frontend/src/screens/Club/Edit.jsx":"13","/root/XRoads2/XRoads/frontend/src/components/Help/Navigation.jsx":"14","/root/XRoads2/XRoads/frontend/src/components/Help/Help.jsx":"15","/root/XRoads2/XRoads/frontend/src/components/Club/Edit/ClubCode.jsx":"16","/root/XRoads2/XRoads/frontend/src/service/xroads-api.js":"17","/root/XRoads2/XRoads/frontend/src/components/Club/Edit/Edit.jsx":"18","/root/XRoads2/XRoads/frontend/src/components/Club/Body/Body.jsx":"19","/root/XRoads2/XRoads/frontend/src/components/Club/Card/Card.jsx":"20","/root/XRoads2/XRoads/frontend/src/screens/Routes/utils.jsx":"21","/root/XRoads2/XRoads/frontend/src/components/Club/Featured/Featured.jsx":"22","/root/XRoads2/XRoads/frontend/src/components/Common/Navbar/Navbar.jsx":"23","/root/XRoads2/XRoads/frontend/src/components/Common/Slides/Slides.jsx":"24","/root/XRoads2/XRoads/frontend/src/components/Common/Search/Search.jsx":"25","/root/XRoads2/XRoads/frontend/src/components/Common/Tabs/Tabs.jsx":"26","/root/XRoads2/XRoads/frontend/src/components/Club/Meeting/Meetings.jsx":"27","/root/XRoads2/XRoads/frontend/src/components/Common/StickyCard/StickyCard.jsx":"28","/root/XRoads2/XRoads/frontend/src/components/Common/AlertBar/AlertBar.jsx":"29","/root/XRoads2/XRoads/frontend/src/components/Common/Form/DynamicForm.jsx":"30","/root/XRoads2/XRoads/frontend/src/components/Common/RichEditor/RichEditor.jsx":"31","/root/XRoads2/XRoads/frontend/src/components/Club/Meeting/Upcoming.jsx":"32","/root/XRoads2/XRoads/frontend/src/components/Club/Meeting/utils.js":"33"},{"size":481,"mtime":1627507066061,"results":"34","hashOfConfig":"35"},{"size":242,"mtime":1627507066051,"results":"36","hashOfConfig":"35"},{"size":5086,"mtime":1627507066061,"results":"37","hashOfConfig":"35"},{"size":648,"mtime":1627531219136,"results":"38","hashOfConfig":"35"},{"size":1016,"mtime":1627591240157,"results":"39","hashOfConfig":"35"},{"size":550,"mtime":1627591240157,"results":"40","hashOfConfig":"35"},{"size":400,"mtime":1627596658877,"results":"41","hashOfConfig":"35"},{"size":174,"mtime":1627507066061,"results":"42","hashOfConfig":"35"},{"size":1607,"mtime":1627591240157,"results":"43","hashOfConfig":"35"},{"size":558,"mtime":1627507066061,"results":"44","hashOfConfig":"35"},{"size":1545,"mtime":1627589157637,"results":"45","hashOfConfig":"35"},{"size":4946,"mtime":1627597345937,"results":"46","hashOfConfig":"35"},{"size":2166,"mtime":1627591240157,"results":"47","hashOfConfig":"35"},{"size":402,"mtime":1627507066061,"results":"48","hashOfConfig":"35"},{"size":3587,"mtime":1627507066061,"results":"49","hashOfConfig":"35"},{"size":2444,"mtime":1627591240157,"results":"50","hashOfConfig":"35"},{"size":2846,"mtime":1627527112736,"results":"51","hashOfConfig":"35"},{"size":4549,"mtime":1627583763617,"results":"52","hashOfConfig":"35"},{"size":1192,"mtime":1627588428097,"results":"53","hashOfConfig":"35"},{"size":620,"mtime":1627512522637,"results":"54","hashOfConfig":"35"},{"size":475,"mtime":1627507066061,"results":"55","hashOfConfig":"35"},{"size":1821,"mtime":1627597895017,"results":"56","hashOfConfig":"35"},{"size":811,"mtime":1627520573011,"results":"57","hashOfConfig":"35"},{"size":1877,"mtime":1627511823647,"results":"58","hashOfConfig":"35"},{"size":2448,"mtime":1627520008237,"results":"59","hashOfConfig":"35"},{"size":2522,"mtime":1627507066051,"results":"60","hashOfConfig":"35"},{"size":9252,"mtime":1627591701007,"results":"61","hashOfConfig":"35"},{"size":311,"mtime":1627529978966,"results":"62","hashOfConfig":"35"},{"size":1353,"mtime":1627507066051,"results":"63","hashOfConfig":"35"},{"size":8401,"mtime":1627507066051,"results":"64","hashOfConfig":"35"},{"size":5788,"mtime":1627507066051,"results":"65","hashOfConfig":"35"},{"size":3302,"mtime":1627597679137,"results":"66","hashOfConfig":"35"},{"size":1053,"mtime":1627507066051,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"ehc5by",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/root/XRoads2/XRoads/frontend/src/index.js",[],["147","148"],"/root/XRoads2/XRoads/frontend/src/App.js",[],"/root/XRoads2/XRoads/frontend/src/serviceWorker.js",[],"/root/XRoads2/XRoads/frontend/src/screens/Root.jsx",[],"/root/XRoads2/XRoads/frontend/src/service/State.jsx",["149","150"],"/root/XRoads2/XRoads/frontend/src/service/User.jsx",[],"/root/XRoads2/XRoads/frontend/src/screens/Generic/NotFound.jsx",["151"],"/root/XRoads2/XRoads/frontend/src/screens/Generic/Error.jsx",[],"/root/XRoads2/XRoads/frontend/src/screens/Club/Routes.jsx",["152","153","154"],"import React, { useEffect, useState } from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport ClubCode from '../../components/Club/Edit/ClubCode';\nimport { useStateValue } from '../../service/State';\nimport ScreenClubBrowser from './Browser';\nimport ScreenClubEdit from './Edit';\nimport ScreenClubDetail from './Page';\n\nconst ClubContext = React.createContext([{}, () => { }])\nconst ClubProvider = (props) => {\n    const [club, setClub] = useState({});\n    return (\n        <ClubContext.Provider value={[club, setClub]}>\n            {props.children}\n        </ClubContext.Provider>\n    );\n}\n\nconst SchoolRoutes = ({ match: { params: { schoolSlug } } }) => {\n    let { path, url } = useRouteMatch();\n    const [state, dispatch] = useStateValue();\n\n    useEffect(() => {\n        dispatch({ type: 'set school', payload: schoolSlug })\n    }, [])\n\n    return (\n        <Switch>\n            <Route exact path={path} component={ScreenClubBrowser} />\n            <ClubProvider>\n                {/* TODO make this url set the code into state and redirect to edit page*/}\n                <Route exact path={`${path}/edit-code/`} component={ClubCode} />\n                <Route exact path={`${path}/:clubSlug/edit`} component={ScreenClubEdit} />\n                <Route exact path={`${path}/:clubSlug/`} component={ScreenClubDetail} />\n\n            </ClubProvider>\n            \n\n        </Switch>\n    );\n}\n\nexport { SchoolRoutes, ClubProvider, ClubContext };\n","/root/XRoads2/XRoads/frontend/src/screens/Generic/HelpRoutes.jsx",["155","156"],"import React, { useEffect } from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { SlideHelp } from '../../components/Help/Help';\nimport HelpNavigation from '../../components/Help/Navigation';\n\n\nconst HelpRoutes = ({ match: { params: { schoolId } } }) => {\n    let { path, url } = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route exact path={path} component={HelpNavigation} />\n            <Route exact path={`${path}/slides/`} component={SlideHelp} />\n        </Switch>\n    );\n}\n\nexport default HelpRoutes;","/root/XRoads2/XRoads/frontend/src/screens/Club/Page.jsx",["157","158","159"],"/root/XRoads2/XRoads/frontend/src/screens/Club/Browser.jsx",["160","161","162","163","164","165","166","167","168","169"],"/root/XRoads2/XRoads/frontend/src/screens/Club/Edit.jsx",["170","171","172"],"import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport { GeneralEdit } from '../../components/Club/Edit/Edit';\nimport { MeetingsEdit } from '../../components/Club/Meeting/Meetings';\nimport Navbar from '../../components/Common/Navbar/Navbar';\nimport Tabs from '../../components/Common/Tabs/Tabs';\nimport { useStateValue } from '../../service/State';\nimport * as XroadsAPI from '../../service/xroads-api';\nimport { ClubContext } from \"../Club/Routes\";\n\n\n// This page is going to use the react hooks format: https://reactjs.org/docs/hooks-overview.html\n// This: { match: { params: { id }}} is the same as props.match.params.id and you can refer to id directly later\nconst ScreenClubEdit = ({ match: { params: { clubSlug } } }) => {\n  let history = useHistory();\n  const [club, setClub] = useContext(ClubContext);\n  const [state, dispatch] = useStateValue();\n  let school = state.user.school;\n  console.log(school);\n  useEffect(() => {\n    if (!('code' in club)) {\n      history.push(`/${school}/${clubSlug}`)\n    }\n    XroadsAPI.fetchClubEdit(clubSlug, club.code).then(res => {\n      if (res.ok) {\n        res.json().then(clubRes => {\n          console.log(clubRes)\n          setClub(clubRes);\n        });\n      } else {\n        history.push(`/`)\n      }\n    });\n  }, [clubSlug, club.code]);\n\n  if (Object.keys(club).length == 0) {\n    console.log(\"Loading\");\n    return (\n      <div>\n        <Navbar>xroads</Navbar>\n      </div>\n    );\n  }\n  else {\n    return (\n      <div>\n        <Navbar>xroads</Navbar>\n        <div className=\"centerContent\">\n          <div className=\"clubHeading\">\n            <h2>Now Editing</h2>\n            <h1 data-tip=\"please email us support@xroads.club to change club name\">{club.name + ` (${club.code})`}</h1>\n            <ReactTooltip place=\"right\" effect=\"solid\" />\n          </div>\n\n          <Tabs>\n            <div label=\"General\">\n              <GeneralEdit />\n            </div>\n            <div label=\"Meetings\">\n              <MeetingsEdit />\n            </div>\n          </Tabs>\n\n\n        </div>\n      </div>\n    );\n  }\n};\n\n\nexport default ScreenClubEdit;\n","/root/XRoads2/XRoads/frontend/src/components/Help/Navigation.jsx",[],"/root/XRoads2/XRoads/frontend/src/components/Help/Help.jsx",[],"/root/XRoads2/XRoads/frontend/src/components/Club/Edit/ClubCode.jsx",["173"],"import { Formik } from \"formik\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { useStateValue } from \"../../../service/State\";\nimport { sendRequest } from \"../../../service/xroads-api\";\nimport Navbar from \"../../Common/Navbar/Navbar\";\nimport \"../Edit/ClubCode.scss\";\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport { useContext } from \"react\";\nimport { ClubContext } from \"../../../screens/Club/Routes\";\n\nconst ClubCode = () => {\n    let history = useHistory();\n    const [state, dispatch] = useStateValue();\n    let school = state.user.school;\n    const [club, setClub] = useContext(ClubContext);\n\n    const onSubmit = (values) => {\n        sendRequest('check_code', { schoolSlug: school }, 'GET', null, {code: values.code}).then(response => {\n            if (response.ok) {\n                response.json().then(club => {\n                    setClub({...club, code: values.code})\n                    let url = `/${school}/${club.slug}/edit/`\n                    history.push(url)\n                })\n            } else {\n                NotificationManager.success(\"Bringing you to edit the club\", \"Success!\")\n            }\n\n        })\n    }\n\n    return (\n        <div>\n            <Navbar></Navbar>\n            <NotificationContainer />\n            <div className=\"center-form\">\n                <Formik\n                    initialValues={{ code: '' }}\n                    validationSchema={Yup.object({\n                        code: Yup.string().required()\n                    })}\n                    onSubmit={onSubmit}\n                >\n                    {(formik) => (\n                        <form className=\"xr-form\" onSubmit={formik.handleSubmit}>\n\n                            <div className=\"fields\">\n                                <label><h2>Enter your club code</h2></label>\n                                <input id=\"only-field\" placeholder=\"Club code\" {...formik.getFieldProps(\"code\")}></input>\n                                <button id=\"xr-submit\" type=\"submit\">Edit now!</button>\n                            </div>\n                        </form>\n                    )}\n                </Formik>\n            </div>\n\n        </div>\n    );\n};\n\nexport default ClubCode;\n","/root/XRoads2/XRoads/frontend/src/service/xroads-api.js",[],"/root/XRoads2/XRoads/frontend/src/components/Club/Edit/Edit.jsx",["174","175","176","177","178","179","180","181","182"],"/root/XRoads2/XRoads/frontend/src/components/Club/Body/Body.jsx",["183"],"/root/XRoads2/XRoads/frontend/src/components/Club/Card/Card.jsx",["184","185"],"import React, { useState } from \"react\";\nimport \"./Card.scss\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst ClubBrowserCard = (props) => {\n  var clubStyle = { backgroundImage: `url(${props.imageURL})` };\n  if (props.hidden) {\n    clubStyle = { backgroundImage: `url(${props.imageURL})`, filter: \"grayscale()\" }\n  }\n\n  return (\n    <div className=\"card\">\n      <Link to={`/${props.schoolSlug}/${props.clubSlug}`}>\n        <div className=\"card-content\" style={clubStyle}>\n          <h1>\n            {props.title}\n          </h1>\n        </div>\n      </Link>\n    </div>\n  );\n}\nexport default ClubBrowserCard;","/root/XRoads2/XRoads/frontend/src/screens/Routes/utils.jsx",[],"/root/XRoads2/XRoads/frontend/src/components/Club/Featured/Featured.jsx",["186"],"/root/XRoads2/XRoads/frontend/src/components/Common/Navbar/Navbar.jsx",["187","188","189"],"import React, { useEffect, useState } from \"react\";\nimport \"./Navbar.scss\";\nimport { AlertBar } from \"../AlertBar/AlertBar\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { useStateValue } from \"../../../service/State\";\n\nconst Navbar = () => {\n  const [state, dispatch] = useStateValue();\n  let school = state.user.school;\n\n  return (\n    <div>\n      <div className=\"navbar-simple\">\n        <NavLink className=\"logoLink\" to={`/${school}/`} >\n          <div className=\"xroadsLogo\" >\n            <h1>xroads</h1>\n          </div>\n        </NavLink>\n        <div className=\"navbar-buttons\">\n          <Link className=\"nav-item\" to={`/${school}/edit-code/`} >\n            edit club\n          </Link>\n        </div>\n      </div>\n      <AlertBar>\n      </AlertBar>\n    </div>\n  );\n\n}\n\nexport default Navbar;","/root/XRoads2/XRoads/frontend/src/components/Common/Slides/Slides.jsx",["190"],"import React from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport ReactPlayer from 'react-player';\nimport './Slides.scss';\n\nclass Slideshow extends React.Component {\n    render() {\n        let centered = true;\n        if (this.props.singleSlide) {\n            centered = false;\n        }\n        let centerSlidePercentage = Math.min((1000 / window.innerWidth) * 100, 100);\n\n        return (\n            <Carousel\n                centerMode={centered}\n                infiniteLoop\n                swipeable\n                showThumbs={false}\n                showIndicators={false}\n                showStatus={false}\n                centerSlidePercentage={ centerSlidePercentage }\n                renderArrowPrev={(onClickHandler, hasPrev, label) =>\n                    hasPrev && (\n                        <button className=\"slide-arrow\" type=\"button\" onClick={onClickHandler} title={label} style={{ left: 15 }}>&lt;</button>\n                    )\n                }\n                renderArrowNext={(onClickHandler, hasNext, label) =>\n                    hasNext && (\n                        <button className=\"slide-arrow\" type=\"button\" onClick={onClickHandler} title={label} style={{ right: 15 }}>&gt;</button>\n                    )\n                }\n            >\n                {this.props.children}\n            </Carousel>\n        );\n    }\n}\n\nconst AutoSlide = ({ url }) => {\n    if (url != null && url.includes(\"youtu\")) {\n        let regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n        let match = url.match(regExp);\n        if (match) {\n            return (<ReactPlayer width=\"100%\" height=\"100%\" url={url}></ReactPlayer>)\n        }\n    }\n    return (<div><img src={url}></img></div>)\n}\n\nexport { Slideshow, AutoSlide };","/root/XRoads2/XRoads/frontend/src/components/Common/Search/Search.jsx",["191","192","193"],"import React from 'react';\nimport './Search.scss';\nimport Sticky from '../StickyCard/StickyCard.jsx';\nimport lunr from 'lunr';\nimport { Component } from 'react';\n\nlet lastSearch = \"\"\n\nclass SearchBar extends React.Component {\n\n  componentDidMount() {\n    document.getElementById(\"search-box\").value = lastSearch;\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchQuery: \"\",\n      searchRes: null\n    }\n\n    console.log(\"Props\", props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.searchClubs = this.searchClubs.bind(this);\n\n    this.clubs = props.clubs;\n    console.log(\"Received clubs for searching\", this.props.clubs);\n\n    this.lunrIndex = lunr(function () {\n      this.field(\"name\", {\n        boost: 10\n      });\n      this.field(\"description\");\n\n      this.ref(\"id\");\n\n      props.clubs.forEach(function (club) {\n        this.add(club)\n      }, this)\n    });\n  }\n\n  handleChange(e) {\n    // setSearchQuery(e.target.value);\n    let v = e.target.value\n    this.setState(() => ({\n      searchQuery: v\n    }));\n    // this.clubs = this.props.clubs;\n    // console.log(\"Received clubs for searching\", this.props.clubs);\n  }\n\n  searchClubs(e) {\n    console.log(\"Search clubs called with query\", this.state.searchQuery);\n    lastSearch = this.state.searchQuery;\n\n    //e.preventDefault();\n\n    let searchRes = this.lunrIndex.search(this.state.searchQuery).map(function (result) {\n      return result.ref;\n    });\n    console.log(\"Lunr index is\", this.lunrIndex);\n\n    console.log(\"Search result found\", searchRes);\n\n    this.props.filterClubs(searchRes)\n    document.getElementById(\"search-box\").blur();\n\n    this.setState({\n      searchRes: searchRes\n    });\n\n\n  }\n  render() {\n    const searchResNotFound = this.state.searchRes != null && this.state.searchRes.length == 0\n    return (\n      <div>\n        <div className=\"search-center\">\n          <Sticky label=\"All Clubs\">\n            <form className=\"default-searchbar\" onSubmit={this.searchClubs}>\n              <input type=\"text\" id=\"search-box\" placeholder=\"Search for clubs\" value={this.searchQuery} onChange={this.handleChange}></input>\n              <input id=\"search-submit\" type=\"submit\" value=\"\" onClick={this.searchClubs}></input>\n            </form>\n          </Sticky>\n        </div>\n        {/* { searchResNotFound ? <div>No results in search - womp, womp, womp :(  </div> : <div />} */}\n      </div>);\n  }\n}\n\n\nexport default SearchBar;","/root/XRoads2/XRoads/frontend/src/components/Common/Tabs/Tabs.jsx",["194"],"import React from 'react';\nimport variables from '../Variables.scss';\nimport PropTypes from 'prop-types';\nimport './Tabs.scss';\n\n\nclass Tabs extends React.Component {\n    static propTypes = {\n        children: PropTypes.instanceOf(Array).isRequired,\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: this.props.children[0].props.label,\n        };\n        this.tabContent = React.createRef();\n    }\n\n    onClickTabItem = (tab) => {\n        this.setState({ activeTab: tab });\n        this.tabContent.current.classList.add(\"fadeIn\")\n        setTimeout(() => {\n          this.tabContent.current.classList.remove(\"fadeIn\")\n        }, 300);\n    }\n\n\n\n    render() {\n        const {\n            onClickTabItem,\n            props: {\n                children,\n            },\n            state: {\n                activeTab,\n            }\n        } = this;\n        return (\n            <div className=\"tabs\">\n                <ol className=\"tab-list\">\n                    {children.map((child) => {\n                        const { label } = child.props;\n                        return (\n                            <Tab\n                                activeTab={activeTab}\n                                key={label}\n                                label={label}\n                                onClick={onClickTabItem}\n                            />\n                        );\n                    })}\n                </ol>\n                <div ref={this.tabContent} className=\"tab-content\">\n                    {children.map((child) => {\n                        if (child.props.label !== activeTab) return undefined;\n                        return child.props.children;\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nclass Tab extends React.Component {\n    static propTypes = {\n      activeTab: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      onClick: PropTypes.func.isRequired,\n    };\n  \n    onClick = () => {\n      const { label, onClick } = this.props;\n      onClick(label);\n    }\n  \n    render() {\n      const {\n        onClick,\n        props: {\n          activeTab,\n          label,\n        },\n      } = this;\n  \n      let className = 'tab-list-item';\n  \n      if (activeTab === label) {\n        className += ' tab-list-active';\n      }\n  \n      return (\n        <li\n          className={className}\n          onClick={onClick}\n        >\n          {label}\n        </li>\n      );\n    }\n  }\n\nexport default Tabs;","/root/XRoads2/XRoads/frontend/src/components/Club/Meeting/Meetings.jsx",["195","196","197","198","199","200"],"/root/XRoads2/XRoads/frontend/src/components/Common/StickyCard/StickyCard.jsx",["201"],"import React, { useState } from \"react\";\nimport './StickyCard.scss';\n\nconst Sticky = (props) => {\n    return (\n        <div className=\"sticky\">\n            <div className=\"sticky-label\">\n                {props.label}\n            </div>\n            {props.children}\n        </div>\n    );\n}\nexport default Sticky;","/root/XRoads2/XRoads/frontend/src/components/Common/AlertBar/AlertBar.jsx",[],"/root/XRoads2/XRoads/frontend/src/components/Common/Form/DynamicForm.jsx",["202","203","204","205","206","207","208","209","210","211"],"import { useField } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDatePicker from \"react-datepicker\";\nimport RichEditor from \"../RichEditor/RichEditor\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport moment from \"moment\";\n\nconst InputField = ({ label, type, ...props }) => {\n    // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n    // which we can spread on <input> and also replace ErrorMessage entirely.\n    const [field, meta] = useField(props);\n    return (\n        <>\n            <label htmlFor={props.id || props.name}>{label}</label>\n            { type == \"textarea\" ? <textarea style={{ height: \"200px\" }} cols=\"2\" {...field} {...props}></textarea> : <input className=\"text-input\" {...field} {...props} />}\n            {meta.touched && meta.error ? (\n                <div className=\"error\">{meta.error}</div>\n            ) : null}\n        </>\n    );\n};\n\nconst FormikTextEditor = ({ label, name }) => {\n    const [field, meta, helpers] = useField(name)\n    const initial = meta.initialValue;\n    const { setValue } = helpers;\n\n    return (\n        <div>\n            <label>{label}</label>\n            <RichEditor initialValue={initial} setValue={setValue}></RichEditor>\n        </div>\n    );\n}\n\nconst TimePicker = ({ label, name }) => {\n    const [field, meta, helpers] = useField(name);\n    const value = () => moment(meta.value, 'H:mm:ss').toDate();\n    const { setValue } = helpers;\n\n    useEffect(() => {\n        setValue(value())\n    }, [])\n\n    return (\n        <div>\n            <label>{label}</label>\n            <ReactDatePicker\n                selected={value()}\n                onChange={date => {\n                    if (moment(date).isValid()) {\n                        setValue(date);\n                    } else {\n                        setValue(moment().toDate())\n                    }\n                }}\n                showTimeSelect\n                showTimeSelectOnly\n                timeIntervals={15}\n                timeCaption=\"Time\"\n                dateFormat=\"h:mm aa\"\n            />\n            {meta.touched && meta.error ? (\n                <div className=\"error\">{meta.error}</div>\n            ) : null}\n        </div>\n\n    );\n}\n\nconst DatePicker = ({ label, name }) => {\n    const [field, meta, helpers] = useField(name);\n    const value = moment(meta.value, 'yyyy-MM-DD').toDate();\n    const { setValue } = helpers;\n    return (\n        <div>\n            <label>{label}</label>\n            <ReactDatePicker\n                selected={value}\n                onChange={date => {\n                    if (moment(date).isValid()) {\n                        setValue(date);\n                    } else {\n                        setValue(moment().toDate())\n                    }\n                }}\n                dateFormat=\"MM/dd/yyyy\"\n            />\n            {meta.touched && meta.error ? (\n                <div className=\"error\">{meta.error}</div>\n            ) : null}\n\n        </div>\n    );\n}\n\nconst DynamicForm = (fieldData, data, editableFields = null) => {\n    /* \n    attr:\n        The key you want to evaluate for child elements. Ex: if attr=\"attr1\", \n        for each key value pair in the object, it retrieves the child object's\n        provided attr  {a: { attr1: 1, attr2: 2} }, in this case it returns {a: 1}\n    \n    obj: A JS object that has also has children as its values\n\n    fields: This array specifies which key values to retrieve the attribute for. If\n    an empty array, all fields are used.\n\n    skipLogic: If you provide skipLogic=(key, value) => boolean, when it evaluates \n    to true, that key value pair will not be included in the result\n\n    attrFiller:\n        If the object does not have that attr in its child object,\n        this calls a function that returns what value should stand in\n        its place. (field, data) => filler value\n    */\n    const objByChildAttr = (attr, obj, fields = [], skipLogic = null, attrFiller = null) => {\n        skipLogic = skipLogic == null ? (key, value) => false : skipLogic\n        attrFiller = attrFiller == null ? (child, data) => null : attrFiller\n        fields = fields.length == 0 ? Object.keys(obj) : fields\n\n        let filtered = {};\n        for (let field of fields) {\n            // if the object does not have the attr\n            if (!Object.keys(obj[field]).includes(attr)) {\n                filtered[field] = attrFiller(field, data)\n            }\n            if (skipLogic(field, obj[field][attr])) {\n                continue;\n            }\n            filtered[field] = obj[field][attr];\n        }\n        return filtered;\n    }\n\n    /* This returns an object with only the specified keys included */\n    const objFromKeys = (keys, obj) => {\n        let values = {};\n        for (var field of keys) {\n            values[field] = obj[field]\n        }\n        return values;\n    }\n\n    /* This retrieves the editable fields based on some conditions. \n    By default all fields are editable */\n    let getEditableFields = editableFields == null ? () => Object.keys(fieldData) : () => editableFields(Object.keys(fieldData), data)\n    /* This retrieves the initial values to be used in the form\n    based on what fields are editable. If the provided object is empty,\n    the editable fields are set to the specified default value. If\n    unspecified, it will throw an exception */\n    const getInitialValues = () => {\n        let editableFields = getEditableFields();\n\n        // This gets default values if it is an empty form\n        if (Object.keys(data).length == 0) {\n            const defaultUnspecified = (field, data) => {\n                throw new Error(\"You did not specify initialValue for field \" + field)\n            }\n\n            // This retrieves the initialValues for the fields. Throws error if unspecified. \n            return objByChildAttr('initialValue', fieldData, editableFields, null, defaultUnspecified)\n        }\n        return objFromKeys(editableFields, data);\n    }\n\n    /* This retrieves validation for each editable field. If validation\n    is not specified, validation = null */\n    const getValidation = () => {\n        return objByChildAttr('validation', fieldData, getEditableFields(),)\n    }\n\n    /* Based on fieldData, this will decided which components to render for the field.\n    You can specify props to be passed into the field by adding an attribute to a field\n    called fieldProps. */\n    const fieldsJSX = (formik, toDisplay=[]) => {\n        let compsToRender = [];\n        // This retrieves the components args for all the editable fields\n        let compData = objByChildAttr('component', fieldData, getEditableFields(), null, null)\n        // This retrieves all props to be passed into the fields of the form\n        let propsFromFields = objByChildAttr('fieldProps', fieldData, getEditableFields(), null, (data, child) => { });\n        \n        // Specifies which fields you want to display for more customizable styling. Default all fields\n        let fieldsToReturn = toDisplay.length == 0 ? Object.keys(compData) : toDisplay\n\n        for (let field of fieldsToReturn) {\n            // If a component is specified directly, it renders that instead\n            if (Object.keys(fieldData[field]).includes(\"component\")) {\n                compsToRender.push(fieldData[field].component(formik))\n                continue;\n            }\n\n            // If component not specified, gets proper component based on field attribute\n            switch (fieldData[field].type) {\n                case \"textarea\":\n                case \"text\":\n                    // Add props to field\n                    compsToRender.push(<InputField name={field} {...propsFromFields[field]}></InputField>)\n                    break;\n                case \"rich-text\":\n                    compsToRender.push(<FormikTextEditor name={field} {...propsFromFields[field]} />)\n                    break;\n                case \"time-selector\":\n                    compsToRender.push(<TimePicker name={field} {...propsFromFields[field]}></TimePicker>)\n                    break;\n                case \"date-selector\":\n                    compsToRender.push(<DatePicker name={field} {...propsFromFields[field]} />)\n                    break;\n            }\n        }\n        return compsToRender.map(item => item)\n    }\n\n    return [fieldsJSX, getInitialValues, getValidation]\n}\n\nexport default DynamicForm;","/root/XRoads2/XRoads/frontend/src/components/Common/RichEditor/RichEditor.jsx",["212","213"],"import { faBold, faItalic, faListOl, faListUl, faQuoteLeft, faUnderline } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { convertFromRaw, convertToRaw, Editor, EditorState, getDefaultKeyBinding, RichUtils } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport { draftToMarkdown, markdownToDraft } from 'markdown-draft-js';\nimport React from 'react';\nimport './RichEditor.scss';\nconst { useState, useRef, useCallback } = React;\n\nfunction RichEditor({ initialValue, setValue = (value) => null }) {\n  const currContentState = convertFromRaw(markdownToDraft(initialValue));\n  const [editorState, setEditorState] = useState(EditorState.createWithContent(currContentState));\n\n  const editor = useRef(null);\n\n  const focus = () => {\n    if (editor.current) editor.current.focus();\n  };\n\n  const handleKeyCommand = useCallback(\n    (command, editorState) => {\n      const newState = RichUtils.handleKeyCommand(editorState, command);\n      if (newState) {\n        setEditorState(newState);\n        return 'handled';\n      }\n      return 'not-handled';\n    },\n    [editorState, setEditorState],\n  );\n\n  const mapKeyToEditorCommand = useCallback(\n    e => {\n      switch (e.keyCode) {\n        case 9: // TAB\n          const newEditorState = RichUtils.onTab(\n            e,\n            editorState,\n            4 /* maxDepth */,\n          );\n          if (newEditorState !== editorState) {\n            setEditorState(newEditorState);\n          }\n          return null;\n      }\n      return getDefaultKeyBinding(e);\n    },\n    [editorState, setEditorState],\n  );\n\n  // If the user changes block type before entering any text, we can\n  // either style the placeholder or hide it. Let's just hide it now.\n  let className = 'RichEditor-editor';\n  var contentState = editorState.getCurrentContent();\n  if (!contentState.hasText()) {\n    if (\n      contentState\n        .getBlockMap()\n        .first()\n        .getType() !== 'unstyled'\n    ) {\n      className += ' RichEditor-hidePlaceholder';\n    }\n  }\n\n  const updateEditorState = (newEditorState) => {\n    const content = newEditorState.getCurrentContent();\n    const rawObject = convertToRaw(content);\n    const markdownString = draftToMarkdown(rawObject);\n    setValue(markdownString);\n    setEditorState(newEditorState);\n  }\n\n  return (\n    <div className=\"RichEditor-root\">\n      <InlineStyleControls\n        editorState={editorState}\n        onToggle={inlineStyle => {\n          const newState = RichUtils.toggleInlineStyle(\n            editorState,\n            inlineStyle,\n          );\n          setEditorState(newState);\n        }}\n      />\n      <BlockStyleControls\n        editorState={editorState}\n        onToggle={blockType => {\n          const newState = RichUtils.toggleBlockType(editorState, blockType);\n          setEditorState(newState);\n        }}\n      />\n      <div className={className} onClick={focus}>\n        <Editor\n          blockStyleFn={getBlockStyle}\n          customStyleMap={styleMap}\n          editorState={editorState}\n          handleKeyCommand={handleKeyCommand}\n          keyBindingFn={mapKeyToEditorCommand}\n          onChange={updateEditorState}\n          ref={editor}\n          spellCheck={true}\n        />\n      </div>\n    </div>\n  );\n}\n\n// Custom overrides for \"code\" style.\nconst styleMap = {\n  CODE: {\n    backgroundColor: 'rgba(0, 0, 0, 0.05)',\n    fontFamily: '\"Inconsolata\", \"Menlo\", \"Consolas\", monospace',\n    fontSize: 16,\n    padding: 2,\n  },\n};\n\nfunction getBlockStyle(block) {\n  switch (block.getType()) {\n    case 'blockquote':\n      return 'RichEditor-blockquote';\n    default:\n      return null;\n  }\n}\n\nfunction StyleButton({ onToggle, active, label, icon, style }) {\n  let className = 'RichEditor-styleButton';\n  if (active) {\n    className += ' RichEditor-activeButton';\n  }\n\n  return (\n    <span\n      className={className}\n      onMouseDown={e => {\n        e.preventDefault();\n        onToggle(style);\n      }}>\n      {typeof (label) == 'string' && <b>{label}</b>}\n      { icon && <FontAwesomeIcon icon={icon} />}\n\n    </span>\n  );\n}\n\nconst BLOCK_TYPES = [\n  { id: 'h1', label: 'H1', style: 'header-one' },\n  { id: 'h2', label: 'H2', style: 'header-two' },\n  { id: 'h3', label: 'H3', style: 'header-three' },\n  { id: 'leftQuote', icon: faQuoteLeft, style: 'blockquote' },\n  { id: 'unorderedList', icon: faListUl, style: 'unordered-list-item' },\n  { id: 'orderedList', icon: faListOl, style: 'ordered-list-item' },\n];\n\nfunction BlockStyleControls({ editorState, onToggle }) {\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n\n  return (\n    <div className=\"RichEditor-controls RichEditor-blockControls\">\n      {BLOCK_TYPES.map(type => (\n        <StyleButton\n          key={type.id}\n          active={type.style === blockType}\n          label={type.label}\n          onToggle={onToggle}\n          style={type.style}\n          icon={type.icon}\n        />\n      ))}\n    </div>\n  );\n}\n\nconst INLINE_STYLES = [\n  { id: 'bold', label: faBold, icon: faBold, style: 'BOLD' },\n  { id: 'italic', label: faItalic, icon: faItalic, style: 'ITALIC' },\n  { id: 'underline', label: faUnderline, icon: faUnderline, style: 'UNDERLINE' },\n];\n\nfunction InlineStyleControls({ editorState, onToggle }) {\n  const currentStyle = editorState.getCurrentInlineStyle();\n  return (\n    <div className=\"RichEditor-controls\">\n      {INLINE_STYLES.map(type => (\n        <StyleButton\n          key={type.id}\n          active={currentStyle.has(type.style)}\n          label={type.label}\n          onToggle={onToggle}\n          style={type.style}\n          icon={type.icon}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default RichEditor;","/root/XRoads2/XRoads/frontend/src/components/Club/Meeting/Upcoming.jsx",["214","215","216","217","218"],"/root/XRoads2/XRoads/frontend/src/components/Club/Meeting/utils.js",["219","220","221","222","223","224","225","226"],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":1,"column":44,"nodeType":"233","messageId":"234","endLine":1,"endColumn":53},{"ruleId":"231","severity":1,"message":"235","line":1,"column":67,"nodeType":"233","messageId":"234","endLine":1,"endColumn":75},{"ruleId":"231","severity":1,"message":"236","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":17},{"ruleId":"231","severity":1,"message":"237","line":20,"column":17,"nodeType":"233","messageId":"234","endLine":20,"endColumn":20},{"ruleId":"231","severity":1,"message":"238","line":21,"column":12,"nodeType":"233","messageId":"234","endLine":21,"endColumn":17},{"ruleId":"239","severity":1,"message":"240","line":25,"column":8,"nodeType":"241","endLine":25,"endColumn":10,"suggestions":"242"},{"ruleId":"231","severity":1,"message":"232","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":26},{"ruleId":"231","severity":1,"message":"237","line":8,"column":17,"nodeType":"233","messageId":"234","endLine":8,"endColumn":20},{"ruleId":"231","severity":1,"message":"243","line":14,"column":17,"nodeType":"233","messageId":"234","endLine":14,"endColumn":25},{"ruleId":"239","severity":1,"message":"244","line":30,"column":6,"nodeType":"241","endLine":30,"endColumn":21,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":33,"column":12,"nodeType":"248","messageId":"249","endLine":33,"endColumn":14},{"ruleId":"231","severity":1,"message":"243","line":14,"column":17,"nodeType":"233","messageId":"234","endLine":14,"endColumn":25},{"ruleId":"246","severity":1,"message":"250","line":37,"column":38,"nodeType":"248","messageId":"249","endLine":37,"endColumn":40},{"ruleId":"246","severity":1,"message":"247","line":43,"column":38,"nodeType":"248","messageId":"249","endLine":43,"endColumn":40},{"ruleId":"231","severity":1,"message":"251","line":46,"column":18,"nodeType":"233","messageId":"234","endLine":46,"endColumn":32},{"ruleId":"246","severity":1,"message":"247","line":48,"column":43,"nodeType":"248","messageId":"249","endLine":48,"endColumn":45},{"ruleId":"246","severity":1,"message":"247","line":50,"column":28,"nodeType":"248","messageId":"249","endLine":50,"endColumn":30},{"ruleId":"252","severity":1,"message":"253","line":59,"column":17,"nodeType":"254","messageId":"255","endLine":59,"endColumn":25,"fix":"256"},{"ruleId":"239","severity":1,"message":"257","line":116,"column":6,"nodeType":"241","endLine":116,"endColumn":35,"suggestions":"258"},{"ruleId":"246","severity":1,"message":"247","line":135,"column":32,"nodeType":"248","messageId":"249","endLine":135,"endColumn":34},{"ruleId":"246","severity":1,"message":"247","line":143,"column":34,"nodeType":"248","messageId":"249","endLine":143,"endColumn":36},{"ruleId":"231","severity":1,"message":"243","line":18,"column":17,"nodeType":"233","messageId":"234","endLine":18,"endColumn":25},{"ruleId":"239","severity":1,"message":"259","line":35,"column":6,"nodeType":"241","endLine":35,"endColumn":27,"suggestions":"260"},{"ruleId":"246","severity":1,"message":"247","line":37,"column":32,"nodeType":"248","messageId":"249","endLine":37,"endColumn":34},{"ruleId":"231","severity":1,"message":"243","line":17,"column":19,"nodeType":"233","messageId":"234","endLine":17,"endColumn":27},{"ruleId":"261","severity":1,"message":"262","line":17,"column":56,"nodeType":"263","messageId":"264","endLine":17,"endColumn":57,"suggestions":"265"},{"ruleId":"261","severity":1,"message":"262","line":17,"column":64,"nodeType":"263","messageId":"264","endLine":17,"endColumn":65,"suggestions":"266"},{"ruleId":"261","severity":1,"message":"267","line":17,"column":69,"nodeType":"263","messageId":"264","endLine":17,"endColumn":70,"suggestions":"268"},{"ruleId":"261","severity":1,"message":"267","line":17,"column":83,"nodeType":"263","messageId":"264","endLine":17,"endColumn":84,"suggestions":"269"},{"ruleId":"261","severity":1,"message":"267","line":17,"column":86,"nodeType":"263","messageId":"264","endLine":17,"endColumn":87,"suggestions":"270"},{"ruleId":"261","severity":1,"message":"267","line":17,"column":96,"nodeType":"263","messageId":"264","endLine":17,"endColumn":97,"suggestions":"271"},{"ruleId":"231","severity":1,"message":"243","line":36,"column":19,"nodeType":"233","messageId":"234","endLine":36,"endColumn":27},{"ruleId":"231","severity":1,"message":"272","line":37,"column":18,"nodeType":"233","messageId":"234","endLine":37,"endColumn":25},{"ruleId":"231","severity":1,"message":"273","line":91,"column":13,"nodeType":"233","messageId":"234","endLine":91,"endColumn":17},{"ruleId":"231","severity":1,"message":"274","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":15},{"ruleId":"231","severity":1,"message":"235","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"275","line":3,"column":16,"nodeType":"233","messageId":"234","endLine":3,"endColumn":26},{"ruleId":"276","severity":1,"message":"277","line":23,"column":13,"nodeType":"233","messageId":"278","endLine":23,"endColumn":24},{"ruleId":"231","severity":1,"message":"232","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":26},{"ruleId":"231","severity":1,"message":"235","line":1,"column":28,"nodeType":"233","messageId":"234","endLine":1,"endColumn":36},{"ruleId":"231","severity":1,"message":"243","line":8,"column":17,"nodeType":"233","messageId":"234","endLine":8,"endColumn":25},{"ruleId":"279","severity":1,"message":"280","line":49,"column":18,"nodeType":"281","endLine":49,"endColumn":33},{"ruleId":"231","severity":1,"message":"282","line":5,"column":10,"nodeType":"233","messageId":"234","endLine":5,"endColumn":19},{"ruleId":"231","severity":1,"message":"283","line":77,"column":11,"nodeType":"233","messageId":"234","endLine":77,"endColumn":28},{"ruleId":"246","severity":1,"message":"247","line":77,"column":91,"nodeType":"248","messageId":"249","endLine":77,"endColumn":93},{"ruleId":"231","severity":1,"message":"284","line":2,"column":8,"nodeType":"233","messageId":"234","endLine":2,"endColumn":17},{"ruleId":"246","severity":1,"message":"247","line":79,"column":46,"nodeType":"248","messageId":"249","endLine":79,"endColumn":48},{"ruleId":"246","severity":1,"message":"247","line":99,"column":38,"nodeType":"248","messageId":"249","endLine":99,"endColumn":40},{"ruleId":"246","severity":1,"message":"250","line":155,"column":60,"nodeType":"248","messageId":"249","endLine":155,"endColumn":62},{"ruleId":"246","severity":1,"message":"250","line":188,"column":49,"nodeType":"248","messageId":"249","endLine":188,"endColumn":51},{"ruleId":"246","severity":1,"message":"250","line":190,"column":59,"nodeType":"248","messageId":"249","endLine":190,"endColumn":61},{"ruleId":"246","severity":1,"message":"247","line":213,"column":35,"nodeType":"248","messageId":"249","endLine":213,"endColumn":37},{"ruleId":"231","severity":1,"message":"235","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"235","line":2,"column":28,"nodeType":"233","messageId":"234","endLine":2,"endColumn":36},{"ruleId":"246","severity":1,"message":"247","line":15,"column":20,"nodeType":"248","messageId":"249","endLine":15,"endColumn":22},{"ruleId":"231","severity":1,"message":"285","line":24,"column":12,"nodeType":"233","messageId":"234","endLine":24,"endColumn":17},{"ruleId":"231","severity":1,"message":"285","line":37,"column":12,"nodeType":"233","messageId":"234","endLine":37,"endColumn":17},{"ruleId":"239","severity":1,"message":"286","line":43,"column":8,"nodeType":"241","endLine":43,"endColumn":10,"suggestions":"287"},{"ruleId":"231","severity":1,"message":"285","line":72,"column":12,"nodeType":"233","messageId":"234","endLine":72,"endColumn":17},{"ruleId":"246","severity":1,"message":"247","line":120,"column":32,"nodeType":"248","messageId":"249","endLine":120,"endColumn":34},{"ruleId":"246","severity":1,"message":"247","line":156,"column":38,"nodeType":"248","messageId":"249","endLine":156,"endColumn":40},{"ruleId":"246","severity":1,"message":"247","line":184,"column":47,"nodeType":"248","messageId":"249","endLine":184,"endColumn":49},{"ruleId":"288","severity":1,"message":"289","line":194,"column":13,"nodeType":"290","messageId":"291","endLine":209,"endColumn":14},{"ruleId":"239","severity":1,"message":"292","line":29,"column":5,"nodeType":"241","endLine":29,"endColumn":34,"suggestions":"293"},{"ruleId":"288","severity":1,"message":"289","line":34,"column":7,"nodeType":"290","messageId":"291","endLine":45,"endColumn":8},{"ruleId":"246","severity":1,"message":"247","line":16,"column":63,"nodeType":"248","messageId":"249","endLine":16,"endColumn":65},{"ruleId":"239","severity":1,"message":"294","line":60,"column":8,"nodeType":"241","endLine":60,"endColumn":32,"suggestions":"295"},{"ruleId":"296","severity":1,"message":"297","line":69,"column":38,"nodeType":"298","messageId":"299","endLine":69,"endColumn":40},{"ruleId":"246","severity":1,"message":"247","line":69,"column":74,"nodeType":"248","messageId":"249","endLine":69,"endColumn":76},{"ruleId":"296","severity":1,"message":"297","line":69,"column":79,"nodeType":"298","messageId":"299","endLine":69,"endColumn":81},{"ruleId":"246","severity":1,"message":"247","line":14,"column":32,"nodeType":"248","messageId":"249","endLine":14,"endColumn":34},{"ruleId":"246","severity":1,"message":"247","line":15,"column":30,"nodeType":"248","messageId":"249","endLine":15,"endColumn":32},{"ruleId":"246","severity":1,"message":"247","line":16,"column":33,"nodeType":"248","messageId":"249","endLine":16,"endColumn":35},{"ruleId":"231","severity":1,"message":"300","line":19,"column":7,"nodeType":"233","messageId":"234","endLine":19,"endColumn":22},{"ruleId":"231","severity":1,"message":"301","line":20,"column":9,"nodeType":"233","messageId":"234","endLine":20,"endColumn":13},{"ruleId":"231","severity":1,"message":"302","line":21,"column":9,"nodeType":"233","messageId":"234","endLine":21,"endColumn":16},{"ruleId":"231","severity":1,"message":"303","line":22,"column":9,"nodeType":"233","messageId":"234","endLine":22,"endColumn":18},{"ruleId":"231","severity":1,"message":"304","line":23,"column":9,"nodeType":"233","messageId":"234","endLine":23,"endColumn":16},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Cookies' is defined but never used.","'url' is assigned a value but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'schoolSlug'. Either include them or remove the dependency array.","ArrayExpression",["307"],"'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'params.clubSlug', and 'state.school'. Either include them or remove the dependency array.",["308"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'getClubByOrder' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"309","text":"310"},"React Hook useEffect has a missing dependency: 'loadClubs'. Either include it or remove the dependency array.",["311"],"React Hook useEffect has missing dependencies: 'club', 'history', 'school', and 'setClub'. Either include them or remove the dependency array.",["312"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["313","314"],["315","316"],"Unnecessary escape character: \\/.",["317","318"],["319","320"],["321","322"],["323","324"],"'setClub' is assigned a value but never used.","'user' is assigned a value but never used.","'Linkify' is defined but never used.","'useHistory' is defined but never used.","no-redeclare","'description' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Component' is defined but never used.","'searchResNotFound' is assigned a value but never used.","'variables' is defined but never used.","'field' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setValue' and 'value'. Either include them or remove the dependency array.",["325"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useCallback has an unnecessary dependency: 'editorState'. Either exclude it or remove the dependency array.",["326"],"React Hook useEffect has a missing dependency: 'setup'. Either include it or remove the dependency array.",["327"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'eventToStartEnd' is assigned a value but never used.","'date' is assigned a value but never used.","'endDate' is assigned a value but never used.","'startTime' is assigned a value but never used.","'endTime' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},[2043,2043],"()",{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"messageId":"336","fix":"337","desc":"338"},{"messageId":"339","fix":"340","desc":"341"},{"messageId":"336","fix":"342","desc":"338"},{"messageId":"339","fix":"343","desc":"341"},{"messageId":"336","fix":"344","desc":"338"},{"messageId":"339","fix":"345","desc":"341"},{"messageId":"336","fix":"346","desc":"338"},{"messageId":"339","fix":"347","desc":"341"},{"messageId":"336","fix":"348","desc":"338"},{"messageId":"339","fix":"349","desc":"341"},{"messageId":"336","fix":"350","desc":"338"},{"messageId":"339","fix":"351","desc":"341"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},"Update the dependencies array to be: [dispatch, schoolSlug]",{"range":"358","text":"359"},"Update the dependencies array to be: [history, params.clubId, params.clubSlug, state.school]",{"range":"360","text":"361"},"Update the dependencies array to be: [state.user.school, allClubs, loadClubs]",{"range":"362","text":"363"},"Update the dependencies array to be: [clubSlug, club.code, club, history, school, setClub]",{"range":"364","text":"365"},"removeEscape",{"range":"366","text":"367"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"368","text":"369"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"370","text":"367"},{"range":"371","text":"369"},{"range":"372","text":"367"},{"range":"373","text":"369"},{"range":"374","text":"367"},{"range":"375","text":"369"},{"range":"376","text":"367"},{"range":"377","text":"369"},{"range":"378","text":"367"},{"range":"379","text":"369"},"Update the dependencies array to be: [setValue, value]",{"range":"380","text":"381"},"Update the dependencies array to be: [setEditorState]",{"range":"382","text":"383"},"Update the dependencies array to be: [events, displayedClubs, setup]",{"range":"384","text":"385"},[868,870],"[dispatch, schoolSlug]",[1071,1086],"[history, params.clubId, params.clubSlug, state.school]",[3511,3540],"[state.user.school, allClubs, loadClubs]",[1360,1381],"[clubSlug, club.code, club, history, school, setClub]",[622,623],"",[622,622],"\\",[630,631],[630,630],[635,636],[635,635],[649,650],[649,649],[652,653],[652,652],[662,663],[662,662],[1516,1518],"[setValue, value]",[1128,1157],"[setEditorState]",[2016,2040],"[events, displayedClubs, setup]"]
